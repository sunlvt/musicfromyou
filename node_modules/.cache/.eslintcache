[{"D:\\github\\react\\Decentralized-Spotify\\src\\index.js":"1","D:\\github\\react\\Decentralized-Spotify\\src\\reportWebVitals.js":"2","D:\\github\\react\\Decentralized-Spotify\\src\\App.js":"3","D:\\github\\react\\Decentralized-Spotify\\src\\pages\\Home.js":"4","D:\\github\\react\\Decentralized-Spotify\\src\\pages\\Album.js":"5","D:\\github\\react\\Decentralized-Spotify\\src\\components\\AudioPlayer.js":"6","D:\\github\\react\\Decentralized-Spotify\\src\\hooks\\useAudio.js":"7","D:\\github\\react\\Decentralized-Spotify\\src\\hooks\\useAlbum.js":"8","D:\\github\\react\\Decentralized-Spotify\\src\\hooks\\useIPFS.js":"9","D:\\github\\react\\Decentralized-Spotify\\src\\helpers\\albumList.js":"10"},{"size":748,"mtime":1673146182765,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1673146182767,"results":"13","hashOfConfig":"12"},{"size":1855,"mtime":1673205924638,"results":"14","hashOfConfig":"12"},{"size":3965,"mtime":1673204341077,"results":"15","hashOfConfig":"12"},{"size":6196,"mtime":1673208854863,"results":"16","hashOfConfig":"12"},{"size":2379,"mtime":1673146182763,"results":"17","hashOfConfig":"12"},{"size":2903,"mtime":1673146182764,"results":"18","hashOfConfig":"12"},{"size":681,"mtime":1673146182764,"results":"19","hashOfConfig":"12"},{"size":241,"mtime":1673146182764,"results":"20","hashOfConfig":"12"},{"size":3072,"mtime":1673191281565,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1mzjxvx",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"D:\\github\\react\\Decentralized-Spotify\\src\\index.js",[],[],["54","55"],"D:\\github\\react\\Decentralized-Spotify\\src\\reportWebVitals.js",[],[],"D:\\github\\react\\Decentralized-Spotify\\src\\App.js",[],[],"D:\\github\\react\\Decentralized-Spotify\\src\\pages\\Home.js",[],[],"D:\\github\\react\\Decentralized-Spotify\\src\\pages\\Album.js",["56"],[],"D:\\github\\react\\Decentralized-Spotify\\src\\components\\AudioPlayer.js",[],[],"D:\\github\\react\\Decentralized-Spotify\\src\\hooks\\useAudio.js",["57","58","59","60"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useIPFS } from \"./useIPFS\";\r\n\r\nconst useAudio = (url) => {\r\n  const {resolveLink} = useIPFS();\r\n  const [audio, setAudio] = useState(url);\r\n  const [trackIndex, setTrackIndex] = useState(0);\r\n  const [newSong, setNewSong] = useState(0);\r\n  const [trackProgress, setTrackProgress] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [volume, setVolume] = useState(1);\r\n  const audioRef = useRef(new Audio(resolveLink(JSON.parse(audio[trackIndex].metadata).animation_url)));\r\n  \r\n  const intervalRef = useRef();\r\n  const isReady = useRef(false);\r\n\r\n  const { duration } = audioRef.current;\r\n\r\n  const toPrevTrack = () => {\r\n    if (trackIndex - 1 < 0) {\r\n      setTrackIndex(audio.length - 1);\r\n    } else {\r\n      setTrackIndex(trackIndex - 1);\r\n    }\r\n  };\r\n\r\n  const toNextTrack = () => {\r\n    if (trackIndex < audio.length - 1) {\r\n      setTrackIndex(trackIndex + 1);\r\n    } else {\r\n      setTrackIndex(0);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    toggle();\r\n    setAudio(url);\r\n    if(trackIndex === 0){\r\n      setNewSong(newSong+1)\r\n    }else{\r\n      setTrackIndex(0);\r\n    }\r\n  }, [url]); \r\n\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n      startTimer();\r\n    } else {\r\n      clearInterval(intervalRef.current);\r\n      audioRef.current.pause();\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      audioRef.current.pause();\r\n      clearInterval(intervalRef.current);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    audioRef.current.pause();\r\n    audioRef.current = new Audio(resolveLink(JSON.parse(audio[trackIndex].metadata).animation_url));\r\n    audioRef.current.volume = volume;\r\n    setTrackProgress(Math.round(audioRef.current.currentTime));\r\n    if (isReady.current) {\r\n      audioRef.current.play();\r\n      setIsPlaying(true);\r\n      startTimer();\r\n    } else {\r\n      isReady.current = true;\r\n    }\r\n  }, [trackIndex, newSong]);\r\n\r\n  const toggle = () => setIsPlaying(!isPlaying);\r\n\r\n  const startTimer = () => {\r\n    clearInterval(intervalRef.current);\r\n\r\n    intervalRef.current = setInterval(() => {\r\n      if (audioRef.current.ended) {\r\n        toNextTrack();\r\n      } else {\r\n        setTrackProgress(Math.round(audioRef.current.currentTime));\r\n      }\r\n    }, [1000]);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    clearInterval(intervalRef.current);\r\n    audioRef.current.currentTime = value;\r\n    setTrackProgress(audioRef.current.currentTime);\r\n  }\r\n\r\n  const onSearchEnd = () => {\r\n    if (!isPlaying) {\r\n        setIsPlaying(true);\r\n      }\r\n      startTimer();\r\n  } \r\n\r\n  const onVolume = (vol) => {\r\n      setVolume(vol);\r\n      audioRef.current.volume = vol;\r\n  };\r\n\r\n  return [isPlaying, duration,toggle, toNextTrack, toPrevTrack, trackProgress, onSearch, onSearchEnd, onVolume, trackIndex];\r\n};\r\n\r\nexport default useAudio;","D:\\github\\react\\Decentralized-Spotify\\src\\hooks\\useAlbum.js",["61"],[],"D:\\github\\react\\Decentralized-Spotify\\src\\hooks\\useIPFS.js",[],[],"D:\\github\\react\\Decentralized-Spotify\\src\\helpers\\albumList.js",[],[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":122,"column":13,"nodeType":"68","endLine":122,"endColumn":55},{"ruleId":"69","severity":1,"message":"70","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":43,"column":6,"nodeType":"75","endLine":43,"endColumn":11,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":53,"column":6,"nodeType":"75","endLine":53,"endColumn":17,"suggestions":"78"},{"ruleId":"73","severity":1,"message":"79","line":74,"column":6,"nodeType":"75","endLine":74,"endColumn":27,"suggestions":"80"},{"ruleId":"73","severity":1,"message":"81","line":16,"column":6,"nodeType":"75","endLine":16,"endColumn":31,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'newSong', 'toggle', and 'trackIndex'. Either include them or remove the dependency array. You can also do a functional update 'setNewSong(n => ...)' if you only need 'newSong' in the 'setNewSong' call.","ArrayExpression",["85"],"React Hook useEffect has a missing dependency: 'startTimer'. Either include it or remove the dependency array.",["86"],"React Hook useEffect has missing dependencies: 'audio', 'resolveLink', 'startTimer', and 'volume'. Either include them or remove the dependency array.",["87"],"React Hook useEffect has a missing dependency: 'fetchAlbum'. Either include it or remove the dependency array.",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [newSong, toggle, trackIndex, url]",{"range":"97","text":"98"},"Update the dependencies array to be: [isPlaying, startTimer]",{"range":"99","text":"100"},"Update the dependencies array to be: [trackIndex, newSong, resolveLink, audio, volume, startTimer]",{"range":"101","text":"102"},"Update the dependencies array to be: [isInitialized, contract, fetchAlbum]",{"range":"103","text":"104"},[1182,1187],"[newSong, toggle, trackIndex, url]",[1392,1403],"[isPlaying, startTimer]",[1970,1991],"[trackIndex, newSong, resolveLink, audio, volume, startTimer]",[425,450],"[isInitialized, contract, fetchAlbum]"]